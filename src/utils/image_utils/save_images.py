import os
from torchvision.utils import save_image

from denormalize import denorm


def save_generated_images(generator, latent_vector, out_dir, image_name="generated"):
    """
    Saves images generated by the generator.

    :param generator: The generator model used to generate images.
    :param latent_vector: The latent vector input for the generator.
    :param out_dir: The output directory where the images will be saved.
    :param image_name: The base name for the saved image file. Defaults to "generated".
    """
    # Generate the images and denormalize to bring pixel values back to [0, 1] interval.
    generated_images = denorm(generator(latent_vector))
    # Save the images
    save_image(tensor=generated_images,
               fp=os.path.join(out_dir, f"{image_name}.png"),
               nrow=5)


def save_real_images(real_images, out_dir, image_name="real"):
    """
    Saves real images from the dataset.

    :param real_images: The real images tensor.
    :param out_dir: The output directory where the images will be saved.
    :param image_name: The base name for the saved image file.
    """
    save_image(tensor=denorm(real_images),
               fp=os.path.join(out_dir, f"{image_name}.png"),
               nrow=5)